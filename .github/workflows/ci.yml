name: CI

on:
  pull_request:
  push:
    branches:
      - master
      - develop
      - feature/**

env:
  UBSAN_OPTIONS: print_stacktrace=1

jobs:
  posix:
    strategy:
      fail-fast: false
      matrix:
        include:
          - toolset: gcc-4.7
            cxxstd: "03,11"
            os: ubuntu-16.04
            install: g++-4.7
          - toolset: gcc-4.8
            cxxstd: "03,11"
            os: ubuntu-16.04
            install: g++-4.8
          - toolset: gcc-4.9
            cxxstd: "03,11"
            os: ubuntu-16.04
            install: g++-4.9
          - toolset: gcc-5
            cxxstd: "03,11,14,1z"
            os: ubuntu-16.04
            install: g++-5
          - toolset: gcc-6
            cxxstd: "03,11,14,1z"
            os: ubuntu-16.04
            install: g++-6
          - toolset: gcc-7
            cxxstd: "03,11,14,17"
            os: ubuntu-18.04
            install: g++-7
          - toolset: gcc-8
            cxxstd: "03,11,14,17,2a"
            os: ubuntu-18.04
            install: g++-8
          - toolset: gcc-9
            cxxstd: "03,11,14,17,2a"
            os: ubuntu-18.04
            install: g++-9
          - toolset: gcc-10
            cxxstd: "03,11,14,17,2a"
            os: ubuntu-18.04
            install: g++-10
          - toolset: clang
            compiler: clang++-3.5
            cxxstd: "03,11"
            os: ubuntu-16.04
            install: clang-3.5
          - toolset: clang
            compiler: clang++-3.6
            cxxstd: "03,11,14"
            os: ubuntu-16.04
            install: clang-3.6
          - toolset: clang
            compiler: clang++-3.7
            cxxstd: "03,11,14"
            os: ubuntu-16.04
            install: clang-3.7
          - toolset: clang
            compiler: clang++-3.8
            cxxstd: "03,11,14"
            os: ubuntu-16.04
            install: clang-3.8
          - toolset: clang
            compiler: clang++-3.9
            cxxstd: "03,11,14"
            os: ubuntu-16.04
            install: clang-3.9
          - toolset: clang
            compiler: clang++-4.0
            cxxstd: "03,11,14"
            os: ubuntu-16.04
            install: clang-4.0
          - toolset: clang
            compiler: clang++-5.0
            cxxstd: "03,11,14,1z"
            os: ubuntu-16.04
            install: clang-5.0
          - toolset: clang
            compiler: clang++-6.0
            cxxstd: "03,11,14,17"
            os: ubuntu-18.04
            install: clang-6.0
          - toolset: clang
            compiler: clang++-7
            cxxstd: "03,11,14,17"
            os: ubuntu-18.04
            install: clang-7
          - toolset: clang
            compiler: clang++-8
            cxxstd: "03,11,14,17"
            os: ubuntu-20.04
            install: clang-8
          - toolset: clang
            compiler: clang++-9
            cxxstd: "03,11,14,17,2a"
            os: ubuntu-20.04
            install: clang-9
          - toolset: clang
            compiler: clang++-10
            cxxstd: "03,11,14,17,2a"
            os: ubuntu-20.04
            install: clang-10
          - toolset: clang
            cxxstd: "03,11,14,17,2a"
            os: macos-10.15

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v2

      - name: Install packages
        if: matrix.install
        run: sudo apt install ${{matrix.install}}

      - name: Setup Boost
        run: |
          if [[ $(uname) =~ [Ll]inux ]]; then
            echo Installing locales for ${TRAVIS_OS_NAME} ...
            sudo /usr/sbin/locale-gen fr_FR
            sudo /usr/sbin/locale-gen en_GB
            sudo locale -a
            echo ...done with locales
          fi
          echo GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          LIBRARY=${GITHUB_REPOSITORY#*/}
          echo LIBRARY: $LIBRARY
          echo "LIBRARY=$LIBRARY" >> $GITHUB_ENV
          echo GITHUB_BASE_REF: $GITHUB_BASE_REF
          echo GITHUB_REF: $GITHUB_REF
          REF=${GITHUB_BASE_REF:-$GITHUB_REF}
          REF=${REF#refs/heads/}
          echo REF: $REF
          BOOST_BRANCH=develop && [ "$REF" == "master" ] && BOOST_BRANCH=master || true
          echo BOOST_BRANCH: $BOOST_BRANCH
          cd ..
          git clone -b $BOOST_BRANCH --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          cp -r $GITHUB_WORKSPACE/* libs/$LIBRARY
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" $LIBRARY
          ./bootstrap.sh
          ./b2 -d0 headers

      - name: Create user-config.jam
        if: matrix.compiler
        run: |
          echo "using ${{matrix.toolset}} : : ${{matrix.compiler}} ;" > ~/user-config.jam

      - name: Run tests
        run: |
          cd ../boost-root
          toolsets=$(sed 's/,/ /g' <<<"${{matrix.toolset}}")
          standards=$(sed 's/,/ /g' <<<"${{matrix.cxxstd}}")
          variants="debug release"
          err=0
          for toolset in ${toolsets} ; do
            for standard in ${standards} ; do
              for variant in ${variants} ; do
                if [[ err -ne 0 ]] ; then
                  echo "skipping: ${toolset} ${standard} ${variant}"
                else
                  echo "running: ${toolset} ${standard} ${variant}"
                  ./b2 -j3 libs/$LIBRARY/test toolset=${toolset} cxxstd=${standard} variant=${variant}
                  err=$?
                fi
              done
            done
          done
          [[ $err -ne 0 ]] && false || true

  windows:
    strategy:
      fail-fast: false
      matrix:
        include:
          - toolset: msvc-14.1
            cxxstd: "14,17,latest"
            addrmd: 32,64
            os: windows-2016
            cxxflags: ""
          - toolset: msvc-14.2
            cxxstd: "14,17,latest"
            addrmd: 32,64
            os: windows-2019
            cxxflags: ""
          - toolset: gcc
            cxxstd: "03,11,14,17,2a"
            addrmd: 64
            os: windows-2019
            cxxflags: "cxxflags=-Wa,-mbig-obj"

    runs-on: ${{matrix.os}}

    steps:
      - uses: actions/checkout@v2

      - name: Setup Boost
        shell: cmd
        run: |
          echo GITHUB_REPOSITORY: %GITHUB_REPOSITORY%
          for /f %%i in ("%GITHUB_REPOSITORY%") do set LIBRARY=%%~nxi
          echo LIBRARY: %LIBRARY%
          echo LIBRARY=%LIBRARY%>>%GITHUB_ENV%
          echo GITHUB_BASE_REF: %GITHUB_BASE_REF%
          echo GITHUB_REF: %GITHUB_REF%
          if "%GITHUB_BASE_REF%" == "" set GITHUB_BASE_REF=%GITHUB_REF%
          set BOOST_BRANCH=develop
          for /f %%i in ("%GITHUB_BASE_REF%") do if "%%~nxi" == "master" set BOOST_BRANCH=master
          echo BOOST_BRANCH: %BOOST_BRANCH%
          cd ..
          git clone -b %BOOST_BRANCH% --depth 1 https://github.com/boostorg/boost.git boost-root
          cd boost-root
          xcopy /s /e /q %GITHUB_WORKSPACE% libs\%LIBRARY%\
          git submodule update --init tools/boostdep
          python tools/boostdep/depinst/depinst.py --git_args "--jobs 3" %LIBRARY%
          cmd /c bootstrap
          b2 -d0 headers

      - name: Run tests
        shell: bash
        run: |
          cd ../boost-root
          toolsets=$(sed 's/,/ /g' <<<"${{matrix.toolset}}")
          standards=$(sed 's/,/ /g' <<<"${{matrix.cxxstd}}")
          address_models=$(sed 's/,/ /g' <<<"${{matrix.addrmd}}")
          variants="debug release"
          err=0
          for toolset in ${toolsets} ; do
            for standard in ${standards} ; do
              for address_model in ${address_models} ; do
                for variant in ${variants} ; do
                  if [[ err -ne 0 ]] ; then
                    echo "skipping: ${toolset} ${standard} ${address_model} ${variant}"
                  else
                    echo "running: ${toolset} ${standard} ${address_model} ${variant}"
                    ./b2 -j3 ${{matrix.cxxflags}} libs/$LIBRARY/test toolset=${toolset} cxxstd=${standard} address-model=${address_model} variant=${variant}
                    err=$?
                  fi
                done
              done
            done
          done
          [[ $err -ne 0 ]] && false || true
